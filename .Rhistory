facet_wrap(~Age_Group, nrow = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 6)) +
labs(title = "Top 10 Charges by Age Group", y = "Proportion", x = "Charge")
#
#
#
#
uknown_age_data = police_arrests %>%
filter(is.na(Age)) %>%
group_by(Street, latitude, longitude) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
head(20)
leaflet() %>%
addTiles() %>%
setView(lng = -79.0558, lat = 35.9132, zoom = 13) %>%
addMarkers(lng = -79.0558, lat = 35.9132, popup = "Chapel Hill, NC") %>%
addCircleMarkers(lng = uknown_age_data$longitude, lat = uknown_age_data$latitude, radius = uknown_age_data$Count / 2)
police_department_data = filter(police_arrests, Street == "828 MARTIN LUTHER KING JR BLVD", Charge == "CONSUME ALCOHOLIC BEVERAGE LESS THAN 21" | str_detect(Charge, "DRUG"))
ggplot(police_department_data)+
geom_bar(aes(x = Arrest_Type))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(leaflet)
# Import Data Below
police_arrests = read_csv("Police_Arrests_Clean2.csv")
#
#
drug_alc_data = police_arrests %>%
filter(Charge == "CONSUME ALCOHOLIC BEVERAGE LESS THAN 21" | str_detect(Charge, "DRUG")) %>%
group_by(Street, latitude, longitude) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
head(20)
leaflet() %>%
addTiles() %>%
setView(lng = -79.0558, lat = 35.9132, zoom = 13) %>%
addMarkers(lng = -79.0558, lat = 35.9132, popup = "Chapel Hill, NC") %>%
addCircleMarkers(lng = drug_alc_data$longitude, lat = drug_alc_data$latitude, radius = drug_alc_data$Count / 2)
age = police_arrests$Age
age_group = c()
for (i in 1:length(age)) {
if (is.na(age[i])) {
age_group = c(age_group, "Unknown")
} else if (age[i] <= 25) {
age_group = c(age_group, "Young")
} else if (age[i] <= 45) {
age_group = c(age_group, "Middle-aged")
} else {
age_group = c(age_group, "Older")
}
}
age_group = factor(age_group, levels = c("Young", "Middle-aged", "Older", "Unknown"))
police_arrests = mutate(police_arrests, Age_Group = age_group)
top_10_data = police_arrests %>%
group_by(Age_Group, Charge) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
arrange(Age_Group, desc(Proportion)) %>%
mutate(Rank = min_rank(desc(Proportion))) %>%
filter(Rank <= 10)
ggplot(top_10_data) +
geom_bar(aes(x = reorder(Charge, -Proportion), y = Proportion, fill = Age_Group), stat = "identity") +
facet_wrap(~Age_Group, nrow = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 6)) +
labs(title = "Top 10 Charges by Age Group", y = "Proportion", x = "Charge")
#
#
#
#
uknown_age_data = police_arrests %>%
filter(is.na(Age)) %>%
group_by(Street, latitude, longitude) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
head(20)
leaflet() %>%
addTiles() %>%
setView(lng = -79.0558, lat = 35.9132, zoom = 13) %>%
addMarkers(lng = -79.0558, lat = 35.9132, popup = "Chapel Hill, NC") %>%
addCircleMarkers(lng = uknown_age_data$longitude, lat = uknown_age_data$latitude, radius = uknown_age_data$Count / 2)
police_department_data = filter(police_arrests, Street == "828 MARTIN LUTHER KING JR BLVD", Charge == "CONSUME ALCOHOLIC BEVERAGE LESS THAN 21" | str_detect(Charge, "DRUG"))
ggplot(police_department_data)+
geom_bar(aes(x = Arrest_Type))
knitr::opts_chunk$set(echo = TRUE,warning=F)
options(scipen=999)
library(tidyverse)    #Essential Functions
library(modelr)       #Helpful Functions in Modeling
library(purrr)
library(broom)
DATA=read_csv("AirWaterTemp.csv",col_types=cols()) #River Data
parking = read_csv("download.csv")
parking
View(parking)
parking = read_csv("download2.csv")
parking
parking = read_csv("download3.csv")
parking
parking = read_csv("download3.csv")
mutate(parking, Amount = str_replace(`Amount Debit`, "-", ""))
parking
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", ""))
parking
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
parking
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount)) %>%
sum(Amount)
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount)) %>%
parking
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
parking
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
sum(parking$Amount)
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
print(sum(parking$Amount))
parking = read_csv("download3.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(parking, Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
print(sum(parking$Amount))
print(sum(gas$Amount))
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
print(sum(parking$Amount))
print(sum(gas$Amount))
total = sum(parking$Amount) + sum(gas$Amount)
print(total)
parking
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount)) %>%
mutate(Date = as.Date(Date))
parking
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
parking
parking[60,]
parking[59,]
parking[-59,]
spring_parking = parking %>%
head(59)
spring_parking
fall_parking
fall_parking = parking[-59,]
fall_parking
fall_parking = parking[-1:59,]
fall_parking = parking[-(1:59),]
fall_parking
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
print(sum(parking$Amount))
print(sum(gas$Amount))
total = sum(parking$Amount) + sum(gas$Amount)
print(total)
spring_parking = parking %>% head(59)
fall_parking = parking[-(1:59),]
print("--------")
print(sum(spring_parking$Amount))
print(sum(fall_parking$Amount))
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
cat("Parking per Year", sum(parking$Amount))
cat("Gas per Year", sum(gas$Amount))
total = sum(parking$Amount) + sum(gas$Amount)
cat("Total", total)
spring_parking = parking %>% head(59)
fall_parking = parking[-(1:59),]
cat("Spring Parking", sum(spring_parking$Amount))
cat("Fall Parking", sum(fall_parking$Amount))
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
cat("Parking per Year", sum(parking$Amount), "\n")
cat("Gas per Year", sum(gas$Amount), "\n")
total = sum(parking$Amount) + sum(gas$Amount)
cat("Total", total, "\n")
spring_parking = parking %>% head(59)
fall_parking = parking[-(1:59),]
cat("Spring Parking", sum(spring_parking$Amount), "\n")
cat("Fall Parking", sum(fall_parking$Amount), "\n")
gas
spring_gas = gas %>% head(18)
fall_gas = gas[-(1:18),]
spring_gas
fall_gas
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
cat("Parking per Year:", sum(parking$Amount), "\n")
cat("Gas per Year:", sum(gas$Amount), "\n")
total = sum(parking$Amount) + sum(gas$Amount)
cat("Total:", total, "\n")
spring_parking = parking %>% head(59)
fall_parking = parking[-(1:59),]
cat("Spring Parking:", sum(spring_parking$Amount), "\n")
cat("Fall Parking:", sum(fall_parking$Amount), "\n")
spring_gas = gas %>% head(18)
fall_gas = gas[-(1:18),]
cat("Spring Gas:", sum(spring_gas$Amount), "\n")
cat("Fall Gas:", sum(fall_gas$Amount), "\n")
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
cat("Parking per Year:", sum(parking$Amount), "\n")
cat("Gas per Year:", sum(gas$Amount), "\n")
total = sum(parking$Amount) + sum(gas$Amount)
cat("Total Year Spending:", total, "\n")
spring_parking = parking %>% head(59)
fall_parking = parking[-(1:59),]
cat("Spring Parking:", sum(spring_parking$Amount), "\n")
cat("Fall Parking:", sum(fall_parking$Amount), "\n")
spring_gas = gas %>% head(18)
fall_gas = gas[-(1:18),]
cat("Spring Gas:", sum(spring_gas$Amount), "\n")
cat("Fall Gas:", sum(fall_gas$Amount), "\n")
parking = read_csv("download3.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
gas = read_csv("download4.csv") %>%
mutate(Amount = str_replace(`Amount Debit`, "-", "")) %>%
mutate(Amount = as.numeric(Amount))
total_year = sum(parking$Amount) + sum(gas$Amount)
spring_parking = parking %>% head(59)
fall_parking = parking[-(1:59),]
spring_gas = gas %>% head(18)
fall_gas = gas[-(1:18),]
total_fall = sum(spring_parking$Amount) + sum(spring_gas$Amount)
total_spring = sum(fall_parking$Amount) + sum(fall_gas$Amount)
cat("Fall Parking:", sum(fall_parking$Amount), "\n")
cat("Fall Gas:", sum(fall_gas$Amount), "\n")
cat("Total Fall Spending:", total_fall, "\n")
cat("Spring Parking:", sum(spring_parking$Amount), "\n")
cat("Spring Gas:", sum(spring_gas$Amount), "\n")
cat("Total Spring Spending:", total_spring, "\n")
cat("Parking per Year:", sum(parking$Amount), "\n")
cat("Gas per Year:", sum(gas$Amount), "\n")
cat("Total Year Spending:", total, "\n")
install.packages("xgboost")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(leaflet)
library(caret)
library(randomForest)
library(cluster)
library(xgboost)
# Import Data Below
police_arrests = read_csv("Police_Arrests_Clean2.csv")
police_arrests$Month_Day = as.numeric(format(police_arrests$Arrest_Date, "%m%d"))
police_arrests$Semester = NA
for(i in 1:nrow(police_arrests)) {
if(is.na(police_arrests$Month_Day[i])) {
police_arrests$Semester[i] = NA
} else if(514 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 729) {
police_arrests$Semester[i] = "Summer"
} else if(817 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 1214) {
police_arrests$Semester[i] = "Fall"
} else if(107 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 509) {
police_arrests$Semester[i] = "Spring"
} else {
police_arrests$Semester[i] = "Break"
}
}
police_arrests$Hour = as.numeric(format(police_arrests$Arrest_Date, "%H"))
police_arrests = mutate(police_arrests,
Season = as.factor(season),
Semester = as.factor(Semester))
police_arrests$DayOfWeek = as.factor(weekdays(police_arrests$Arrest_Date))
police_arrests$IsWeekend = as.factor(ifelse(police_arrests$DayOfWeek %in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
police_arrests$Arrest_Type = as.factor(police_arrests$Arrest_Type)
police_arrests$Day = as.numeric(format(police_arrests$Arrest_Date, "%d"))
police_arrests$Drugs_Alcohol = as.factor(police_arrests$Drugs_Alcohol)
model_data = police_arrests %>%
select(Hour, Zip, Street, Month = month_num, Day, Season, Arrest_Type, Drugs_Alcohol, Semester, DayOfWeek, IsWeekend, latitude, longitude) %>%
na.omit()
rf_model = randomForest(
Hour ~ Zip + Month + Day + Season + Arrest_Type + Drugs_Alcohol + Semester + DayOfWeek + IsWeekend + latitude + longitude,
data = model_data,
ntree = 100,
importance = TRUE
)
xgb_model = train(
Hour ~ Zip + Month + Day + Season + Arrest_Type + Drugs_Alcohol + Semester + DayOfWeek + IsWeekend + latitude + longitude,
data = model_data,
method = "xgbTree",
trControl = trainControl(method = "cv", number = 5),
tuneLength = 10
)
clear
police_arrests$Month_Day = as.numeric(format(police_arrests$Arrest_Date, "%m%d"))
police_arrests$Semester = NA
for(i in 1:nrow(police_arrests)) {
if(is.na(police_arrests$Month_Day[i])) {
police_arrests$Semester[i] = NA
} else if(514 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 729) {
police_arrests$Semester[i] = "Summer"
} else if(817 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 1214) {
police_arrests$Semester[i] = "Fall"
} else if(107 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 509) {
police_arrests$Semester[i] = "Spring"
} else {
police_arrests$Semester[i] = "Break"
}
}
police_arrests$Hour = as.numeric(format(police_arrests$Arrest_Date, "%H"))
police_arrests = mutate(police_arrests,
Season = as.factor(season),
Semester = as.factor(Semester))
police_arrests$DayOfWeek = as.factor(weekdays(police_arrests$Arrest_Date))
police_arrests$IsWeekend = as.factor(ifelse(police_arrests$DayOfWeek %in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
police_arrests$Arrest_Type = as.factor(police_arrests$Arrest_Type)
police_arrests$Day = as.numeric(format(police_arrests$Arrest_Date, "%d"))
police_arrests$Drugs_Alcohol = as.factor(police_arrests$Drugs_Alcohol)
model_data = police_arrests %>%
select(Hour, Zip, Month = month_num, Day, Season, Arrest_Type, Drugs_Alcohol, Semester, DayOfWeek, IsWeekend, latitude, longitude) %>%
na.omit()
rf_model = randomForest(
Hour ~ Zip + Month + Day + Season + Arrest_Type + Drugs_Alcohol + Semester + DayOfWeek + IsWeekend + latitude + longitude,
data = model_data,
ntree = 100,
importance = TRUE
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(leaflet)
library(caret)
library(randomForest)
library(cluster)
library(xgboost)
# Import Data Below
police_arrests = read_csv("Police_Arrests_Clean2.csv")
#
#
drug_alc_data = police_arrests %>%
filter(Charge == "CONSUME ALCOHOLIC BEVERAGE LESS THAN 21" | str_detect(Charge, "DRUG")) %>%
group_by(Street, latitude, longitude) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
head(20)
leaflet() %>%
addTiles() %>%
setView(lng = -79.0558, lat = 35.9132, zoom = 13) %>%
addMarkers(lng = -79.0558, lat = 35.9132, popup = "Chapel Hill, NC") %>%
addCircleMarkers(lng = drug_alc_data$longitude, lat = drug_alc_data$latitude, radius = drug_alc_data$Count / 2)
age = police_arrests$Age
age_group = c()
for (i in 1:length(age)) {
if (is.na(age[i])) {
age_group = c(age_group, "Unknown")
} else if (age[i] <= 25) {
age_group = c(age_group, "Young")
} else if (age[i] <= 45) {
age_group = c(age_group, "Middle-aged")
} else {
age_group = c(age_group, "Older")
}
}
age_group = factor(age_group, levels = c("Young", "Middle-aged", "Older", "Unknown"))
police_arrests = mutate(police_arrests, Age_Group = age_group)
top_10_data = police_arrests %>%
group_by(Age_Group, Charge) %>%
summarise(Count = n()) %>%
mutate(Proportion = Count / sum(Count)) %>%
arrange(Age_Group, desc(Proportion)) %>%
mutate(Rank = min_rank(desc(Proportion))) %>%
filter(Rank <= 10)
ggplot(top_10_data) +
geom_bar(aes(x = reorder(Charge, -Proportion), y = Proportion, fill = Age_Group), stat = "identity") +
facet_wrap(~Age_Group, nrow = 1) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 6)) +
labs(title = "Top 10 Charges by Age Group", y = "Proportion", x = "Charge")
#
#
#
#
uknown_age_data = police_arrests %>%
filter(is.na(Age)) %>%
group_by(Street, latitude, longitude) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
head(20)
leaflet() %>%
addTiles() %>%
setView(lng = -79.0558, lat = 35.9132, zoom = 13) %>%
addMarkers(lng = -79.0558, lat = 35.9132, popup = "Chapel Hill, NC") %>%
addCircleMarkers(lng = uknown_age_data$longitude, lat = uknown_age_data$latitude, radius = uknown_age_data$Count / 2)
police_department_data = filter(police_arrests, Street == "828 MARTIN LUTHER KING JR BLVD", Charge == "CONSUME ALCOHOLIC BEVERAGE LESS THAN 21" | str_detect(Charge, "DRUG"))
ggplot(police_department_data)+
geom_bar(aes(x = Arrest_Type))
police_arrests$Month_Day = as.numeric(format(police_arrests$Arrest_Date, "%m%d"))
police_arrests$Semester = NA
for(i in 1:nrow(police_arrests)) {
if(is.na(police_arrests$Month_Day[i])) {
police_arrests$Semester[i] = NA
} else if(514 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 729) {
police_arrests$Semester[i] = "Summer"
} else if(817 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 1214) {
police_arrests$Semester[i] = "Fall"
} else if(107 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 509) {
police_arrests$Semester[i] = "Spring"
} else {
police_arrests$Semester[i] = "Break"
}
}
police_arrests$Hour = as.numeric(format(police_arrests$Arrest_Date, "%H"))
police_arrests = mutate(police_arrests,
Season = as.factor(season),
Semester = as.factor(Semester))
police_arrests$DayOfWeek = as.factor(weekdays(police_arrests$Arrest_Date))
police_arrests$IsWeekend = as.factor(ifelse(police_arrests$DayOfWeek %in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
police_arrests$Arrest_Type = as.factor(police_arrests$Arrest_Type)
police_arrests$Day = as.numeric(format(police_arrests$Arrest_Date, "%d"))
police_arrests$Drugs_Alcohol = as.factor(police_arrests$Drugs_Alcohol)
model_data = police_arrests %>%
select(Hour, Zip, Month = month_num, Day, Season, Arrest_Type, Drugs_Alcohol, Semester, DayOfWeek, IsWeekend, latitude, longitude) %>%
na.omit()
rf_model = randomForest(
Hour ~ Zip + Month + Day + Season + Arrest_Type + Drugs_Alcohol + Semester + DayOfWeek + IsWeekend + latitude + longitude,
data = model_data,
ntree = 100,
importance = TRUE
)
xgb_model = train(
Hour ~ Zip + Month + Day + Season + Arrest_Type + Drugs_Alcohol + Semester + DayOfWeek + IsWeekend + latitude + longitude,
data = model_data,
method = "xgbTree",
trControl = trainControl(method = "cv", number = 5),
tuneLength = 10
)
police_arrests$Month_Day = as.numeric(format(police_arrests$Arrest_Date, "%m%d"))
police_arrests$Semester = NA
for(i in 1:nrow(police_arrests)) {
if(is.na(police_arrests$Month_Day[i])) {
police_arrests$Semester[i] = NA
} else if(514 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 729) {
police_arrests$Semester[i] = "Summer"
} else if(817 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 1214) {
police_arrests$Semester[i] = "Fall"
} else if(107 <= police_arrests$Month_Day[i] && police_arrests$Month_Day[i] <= 509) {
police_arrests$Semester[i] = "Spring"
} else {
police_arrests$Semester[i] = "Break"
}
}
police_arrests$Hour = as.numeric(format(police_arrests$Arrest_Date, "%H"))
police_arrests = mutate(police_arrests,
Season = as.factor(season),
Semester = as.factor(Semester))
police_arrests$DayOfWeek = as.factor(weekdays(police_arrests$Arrest_Date))
police_arrests$IsWeekend = as.factor(ifelse(police_arrests$DayOfWeek %in% c("Saturday", "Sunday"), "Weekend", "Weekday"))
police_arrests$Arrest_Type = as.factor(police_arrests$Arrest_Type)
police_arrests$Day = as.numeric(format(police_arrests$Arrest_Date, "%d"))
police_arrests$Drugs_Alcohol = as.factor(police_arrests$Drugs_Alcohol)
model_data = police_arrests %>%
select(Hour, Zip, Month = month_num, Day, Season, Arrest_Type, Drugs_Alcohol, Semester, DayOfWeek, IsWeekend, latitude, longitude) %>%
na.omit()
rf_model = randomForest(
Hour ~ Zip + Month + Day + Season + Arrest_Type + Drugs_Alcohol + Semester + DayOfWeek + IsWeekend + latitude + longitude,
data = model_data,
ntree = 100,
importance = TRUE
)
model_data$RF_Predictions = predict(rf_model)
MAE.func = function(actual, predict) {
return (mean(abs(actual - predict)))
}
mae_data = tibble(
RF_MAE = MAE.func(actual = model_data$Hour, predict = model_data$RF_Predictions))
mae_data
knitr::opts_chunk$set(echo = TRUE)
